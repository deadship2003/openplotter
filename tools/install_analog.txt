Analog sensors
I have a ADS1115 16 bit adc for i2c
and different types of arduino/teensy/stm32

First ADS1115
It can be connected to the i2c bus in the same way you connect for example a pressure sensor.
You can connect up to 4 ADS1115

The config file (openplotter_analog.conf) is located in the tools folder.
There are 16 sections ([ADS1115_0],[ADS1115_1],[ADS1115_2],[ADS1115_3],[ADS1115_4],[ADS1115_5])

[ADS1115_0] active = 1
gain = 0 
samples = 6 
ohmmeter = 0 
fixed_resistor = 0 
high_voltage = 3000 
voltage_divider = 0 
upper_resistance = 1000 
lower_resistance = 1000 
adjust = 0 
sk_name = tanks.fuel.left.currentLevel 
adjust_points = [[100.0,0.0],[5000.0,90.0],[9000.0,100.0]]

If a channel is used active must be set to 1
The gain setting can be changed with gain. 
 gain = 0 +/- 6.144V 
 gain = 1 +/- 4.096V 
 gain = 2 +/- 2.048V 
 gain = 3 +/- 1.024V 
 gain = 4 +/- 0.512V 
 gain = 5 +/- 0.256V
samples setting can be changed with samples (see table). 
 samples 0 8  samples per second
 samples 1 16 samples per second
 samples 2 32 samples per second
 samples 3 64 samples per second
 samples 4 128 samples per second
 samples 5 250 samples per second
 samples 6 475 samples per second
 samples 7 860 samples per second
ohmmeter can be set to 1 to measure the resistance of a sensor.
 fixed_resistor must be set to the resistance of the fixed resistor and 
 high_voltage is the voltage you put on the two resistors in serial. 
 The resistance you want to measure is connected on one side to ground and 
 on the other side to the fixed resistor and analog input of the adc. 
 The other side of the fixed resistor is connected to + pol (for example 3.3V (high_voltage))
voltage_divider can be set to 1 if you want to have Volt values.
 If you want to measure 12 V with a adc witch is only capable of max 3.3V,
 you need a voltage divider in form of two resistors. (50k+10k would put the voltage from 12V to 2V)
 upper_resistance has to be set to 50000 and lower resistance to 10000 for this example.
 Look at the picture on http://forum.arduino.cc/index.php?topic=214930.0
adjust is only for adjusting the offset
The value is send to SignalK on the name you set in sk_name.
adjust_points
 You can put in some points of a curve.
 Between this point the value is calculated linear. 
 This is the easiest way to get good results. 
 It can be used in combination with voltage_devider or ohmmeter.

Some settings are described under Arduino 
 
Second Arduino

Arduinos have a 10 bit adc
teensy have 10 to 16 bit adc
stm32 have 12 to 16 bit adc

For Arduino you must have:
	Arduino ide compatible board with usb
	Arduino ide
	Install Pymata:
		sudo apt-get install python-pip
		sudo pip install pymata

For ads1115 you must have:
	Install smbus:
		sudo apt-get install python-smbus
	
First you upload FirmataStandard from Arduino ide to your board (for help use google)
Connect the board to your rpi.
Use USB manager to give the board the name ttyOP_FIRM

Now edit openplotter.conf at the section [TOOLS]
put in 
[TOOLS]
py = [['Analog ads1115','put analog values to SignalK','analog_ads1115','0'],['Analog Firmata','put analog values to SignalK','oppymata','0']]
(change 0 to 1 for autostart)

The config file section for Firmata is easy in comparison with the ads1115.

There are up to 16 sections ([FIRMATA_0]..[FIRMATA_15])

[FIRMATA_1] 
sk_name = tanks.fuel.right.currentLevel 
adjust_points = [[52.0,0.0],[522.0,25.0],[708.0,50.0],[913.0,100],[1024.0,100.01]]
